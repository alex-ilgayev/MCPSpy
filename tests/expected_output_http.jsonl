{"timestamp": "2025-10-17T17:57:22.284271444+03:00", "transport_type": "http", "http_transport": {"pid": 47837, "comm": "python", "host": "127.0.0.1:12345", "is_request": true}, "type": "request", "id": 0, "method": "initialize", "params": {"capabilities": {}, "clientInfo": {"name": "mcp", "version": "0.1.0"}, "protocolVersion": "2025-06-18"}, "error": {}, "raw": "{\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2025-06-18\",\"capabilities\":{},\"clientInfo\":{\"name\":\"mcp\",\"version\":\"0.1.0\"}},\"jsonrpc\":\"2.0\",\"id\":0}"}
{"timestamp": "2025-10-17T17:57:22.292522857+03:00", "transport_type": "http", "http_transport": {"pid": 47837, "comm": "python", "host": "127.0.0.1:12345"}, "type": "response", "id": 0, "result": {"capabilities": {"experimental": {}, "prompts": {"listChanged": false}, "resources": {"listChanged": false, "subscribe": false}, "tools": {"listChanged": false}}, "protocolVersion": "2025-06-18", "serverInfo": {"name": "Comprehensive MCP Demo Server", "version": "1.12.2"}}, "error": {}, "request": {"type": "request", "id": 0, "method": "initialize", "params": {"capabilities": {}, "clientInfo": {"name": "mcp", "version": "0.1.0"}, "protocolVersion": "2025-06-18"}, "error": {}}, "raw": "{\"jsonrpc\":\"2.0\",\"id\":0,\"result\":{\"protocolVersion\":\"2025-06-18\",\"capabilities\":{\"experimental\":{},\"prompts\":{\"listChanged\":false},\"resources\":{\"subscribe\":false,\"listChanged\":false},\"tools\":{\"listChanged\":false}},\"serverInfo\":{\"name\":\"Comprehensive MCP Demo Server\",\"version\":\"1.12.2\"}}}"}
{"timestamp": "2025-10-17T17:57:22.300847692+03:00", "transport_type": "http", "http_transport": {"pid": 47837, "comm": "python", "host": "127.0.0.1:12345", "is_request": true}, "type": "notification", "method": "notifications/initialized", "error": {}, "raw": "{\"method\":\"notifications/initialized\",\"jsonrpc\":\"2.0\"}"}
{"timestamp": "2025-10-17T17:57:22.310463538+03:00", "transport_type": "http", "http_transport": {"pid": 47837, "comm": "python", "host": "127.0.0.1:12345", "is_request": true}, "type": "request", "id": 1, "method": "prompts/list", "error": {}, "raw": "{\"method\":\"prompts/list\",\"jsonrpc\":\"2.0\",\"id\":1}"}
{"timestamp": "2025-10-17T17:57:22.316039424+03:00", "transport_type": "http", "http_transport": {"pid": 47837, "comm": "python", "host": "127.0.0.1:12345"}, "type": "response", "id": 1, "result": {"prompts": [{"arguments": [{"name": "code", "required": true}, {"name": "language", "required": false}], "description": "\n    Generate a code review prompt.\n\n    Args:\n        code: Code to review\n        language: Programming language\n    ", "name": "code_review", "title": "Code Review"}]}, "error": {}, "request": {"type": "request", "id": 1, "method": "prompts/list", "error": {}}, "raw": "{\"jsonrpc\":\"2.0\",\"id\":1,\"result\":{\"prompts\":[{\"name\":\"code_review\",\"title\":\"Code Review\",\"description\":\"\\n    Generate a code review prompt.\\n\\n    Args:\\n        code: Code to review\\n        language: Programming language\\n    \",\"arguments\":[{\"name\":\"code\",\"required\":true},{\"name\":\"language\",\"required\":false}]}]}}"}
{"timestamp": "2025-10-17T17:57:22.321960591+03:00", "transport_type": "http", "http_transport": {"pid": 47837, "comm": "python", "host": "127.0.0.1:12345", "is_request": true}, "type": "request", "id": 2, "method": "prompts/get", "params": {"arguments": {"code": "def hello():\n    print('Hello, World!')", "language": "python"}, "name": "code_review"}, "error": {}, "raw": "{\"method\":\"prompts/get\",\"params\":{\"name\":\"code_review\",\"arguments\":{\"code\":\"def hello():\\n    print('Hello, World!')\",\"language\":\"python\"}},\"jsonrpc\":\"2.0\",\"id\":2}"}
{"timestamp": "2025-10-17T17:57:22.325074738+03:00", "transport_type": "http", "http_transport": {"pid": 47837, "comm": "python", "host": "127.0.0.1:12345"}, "type": "response", "id": 2, "result": {"description": "\n    Generate a code review prompt.\n\n    Args:\n        code: Code to review\n        language: Programming language\n    ", "messages": [{"content": {"text": "Please review this python code and provide feedback on:\n\n1. Code quality and style\n2. Potential bugs or issues\n3. Performance considerations\n4. Security concerns\n5. Suggestions for improvement\n\n```python\ndef hello():\n    print('Hello, World!')\n```\n\nPlease provide specific, actionable feedback.", "type": "text"}, "role": "user"}]}, "error": {}, "request": {"type": "request", "id": 2, "method": "prompts/get", "params": {"arguments": {"code": "def hello():\n    print('Hello, World!')", "language": "python"}, "name": "code_review"}, "error": {}}, "raw": "{\"jsonrpc\":\"2.0\",\"id\":2,\"result\":{\"description\":\"\\n    Generate a code review prompt.\\n\\n    Args:\\n        code: Code to review\\n        language: Programming language\\n    \",\"messages\":[{\"role\":\"user\",\"content\":{\"type\":\"text\",\"text\":\"Please review this python code and provide feedback on:\\n\\n1. Code quality and style\\n2. Potential bugs or issues\\n3. Performance considerations\\n4. Security concerns\\n5. Suggestions for improvement\\n\\n```python\\ndef hello():\\n    print('Hello, World!')\\n```\\n\\nPlease provide specific, actionable feedback.\"}}]}}"}
{"timestamp": "2025-10-17T17:57:22.331396527+03:00", "transport_type": "http", "http_transport": {"pid": 47837, "comm": "python", "host": "127.0.0.1:12345", "is_request": true}, "type": "request", "id": 3, "method": "resources/list", "error": {}, "raw": "{\"method\":\"resources/list\",\"jsonrpc\":\"2.0\",\"id\":3}"}
{"timestamp": "2025-10-17T17:57:22.33628819+03:00", "transport_type": "http", "http_transport": {"pid": 47837, "comm": "python", "host": "127.0.0.1:12345"}, "type": "response", "id": 3, "result": {"resources": [{"description": "Current server status and health information.", "mimeType": "application/json", "name": "server_status", "uri": "status://server"}]}, "error": {}, "request": {"type": "request", "id": 3, "method": "resources/list", "error": {}}, "raw": "{\"jsonrpc\":\"2.0\",\"id\":3,\"result\":{\"resources\":[{\"name\":\"server_status\",\"uri\":\"status://server\",\"description\":\"Current server status and health information.\",\"mimeType\":\"application/json\"}]}}"}
{"timestamp": "2025-10-17T17:57:22.340801757+03:00", "transport_type": "http", "http_transport": {"pid": 47837, "comm": "python", "host": "127.0.0.1:12345", "is_request": true}, "type": "request", "id": 4, "method": "resources/read", "params": {"uri": "status://server"}, "error": {}, "raw": "{\"method\":\"resources/read\",\"params\":{\"uri\":\"status://server\"},\"jsonrpc\":\"2.0\",\"id\":4}"}
{"timestamp": "2025-10-17T17:57:22.344665004+03:00", "transport_type": "http", "http_transport": {"pid": 47837, "comm": "python", "host": "127.0.0.1:12345"}, "type": "response", "id": 4, "result": {"contents": [{"mimeType": "application/json", "text": "{\n  \"status\": \"healthy\",\n  \"uptime\": \"2 hours 34 minutes\",\n  \"memory_usage\": \"45.2 MB\",\n  \"cpu_usage\": \"12.5%\",\n  \"active_connections\": 3,\n  \"requests_processed\": 1247\n}", "uri": "status://server"}]}, "error": {}, "request": {"type": "request", "id": 4, "method": "resources/read", "params": {"uri": "status://server"}, "error": {}}, "raw": "{\"jsonrpc\":\"2.0\",\"id\":4,\"result\":{\"contents\":[{\"uri\":\"status://server\",\"mimeType\":\"application/json\",\"text\":\"{\\n  \\\"status\\\": \\\"healthy\\\",\\n  \\\"uptime\\\": \\\"2 hours 34 minutes\\\",\\n  \\\"memory_usage\\\": \\\"45.2 MB\\\",\\n  \\\"cpu_usage\\\": \\\"12.5%\\\",\\n  \\\"active_connections\\\": 3,\\n  \\\"requests_processed\\\": 1247\\n}\"}]}}"}
{"timestamp": "2025-10-17T17:57:22.350922184+03:00", "transport_type": "http", "http_transport": {"pid": 47837, "comm": "python", "host": "127.0.0.1:12345", "is_request": true}, "type": "request", "id": 5, "method": "resources/read", "params": {"uri": "file://logs/nonexistent.txt"}, "error": {}, "raw": "{\"method\":\"resources/read\",\"params\":{\"uri\":\"file://logs/nonexistent.txt\"},\"jsonrpc\":\"2.0\",\"id\":5}"}
{"timestamp": "2025-10-17T17:57:22.353427982+03:00", "transport_type": "http", "http_transport": {"pid": 47837, "comm": "python", "host": "127.0.0.1:12345"}, "type": "response", "id": 5, "error": {"message": "Error creating resource from template: Error creating resource from template: Unknown log file: nonexistent.txt"}, "request": {"type": "request", "id": 5, "method": "resources/read", "params": {"uri": "file://logs/nonexistent.txt"}, "error": {}}, "raw": "{\"jsonrpc\":\"2.0\",\"id\":5,\"error\":{\"code\":0,\"message\":\"Error creating resource from template: Error creating resource from template: Unknown log file: nonexistent.txt\"}}"}
{"timestamp": "2025-10-17T17:57:22.36060073+03:00", "transport_type": "http", "http_transport": {"pid": 47837, "comm": "python", "host": "127.0.0.1:12345", "is_request": true}, "type": "request", "id": 6, "method": "tools/list", "error": {}, "raw": "{\"method\":\"tools/list\",\"jsonrpc\":\"2.0\",\"id\":6}"}
{"timestamp": "2025-10-17T17:57:22.36237561+03:00", "transport_type": "http", "http_transport": {"pid": 47837, "comm": "python", "host": "127.0.0.1:12345"}, "type": "response", "id": 6, "result": {"tools": [{"description": "\n    Get current weather information for a city.\n\n    Args:\n        city: Name of the city\n        units: Temperature units (metric, imperial, or kelvin)\n\n    Returns:\n        Weather information or error message\n    ", "inputSchema": {"properties": {"city": {"title": "City", "type": "string"}, "units": {"default": "metric", "title": "Units", "type": "string"}}, "required": ["city"], "title": "get_weatherArguments", "type": "object"}, "name": "get_weather", "outputSchema": {"properties": {"result": {"title": "Result", "type": "string"}}, "required": ["result"], "title": "get_weatherOutput", "type": "object"}}, {"description": "\n    Process a list of data items with progress reporting.\n\n    Args:\n        data: List of data items to process\n        operation: Type of operation (uppercase, lowercase, reverse)\n        ctx: MCP context for progress reporting\n\n    Returns:\n        Processed data results\n    ", "inputSchema": {"properties": {"data": {"items": {"type": "string"}, "title": "Data", "type": "array"}, "operation": {"title": "Operation", "type": "string"}}, "required": ["data", "operation"], "title": "process_data_with_progressArguments", "type": "object"}, "name": "process_data_with_progress", "outputSchema": {"properties": {"result": {"title": "Result", "type": "string"}}, "required": ["result"], "title": "process_data_with_progressOutput", "type": "object"}}]}, "error": {}, "request": {"type": "request", "id": 6, "method": "tools/list", "error": {}}, "raw": "{\"jsonrpc\":\"2.0\",\"id\":6,\"result\":{\"tools\":[{\"name\":\"get_weather\",\"description\":\"\\n    Get current weather information for a city.\\n\\n    Args:\\n        city: Name of the city\\n        units: Temperature units (metric, imperial, or kelvin)\\n\\n    Returns:\\n        Weather information or error message\\n    \",\"inputSchema\":{\"properties\":{\"city\":{\"title\":\"City\",\"type\":\"string\"},\"units\":{\"default\":\"metric\",\"title\":\"Units\",\"type\":\"string\"}},\"required\":[\"city\"],\"title\":\"get_weatherArguments\",\"type\":\"object\"},\"outputSchema\":{\"properties\":{\"result\":{\"title\":\"Result\",\"type\":\"string\"}},\"required\":[\"result\"],\"title\":\"get_weatherOutput\",\"type\":\"object\"}},{\"name\":\"process_data_with_progress\",\"description\":\"\\n    Process a list of data items with progress reporting.\\n\\n    Args:\\n        data: List of data items to process\\n        operation: Type of operation (uppercase, lowercase, reverse)\\n        ctx: MCP context for progress reporting\\n\\n    Returns:\\n        Processed data results\\n    \",\"inputSchema\":{\"properties\":{\"data\":{\"items\":{\"type\":\"string\"},\"title\":\"Data\",\"type\":\"array\"},\"operation\":{\"title\":\"Operation\",\"type\":\"string\"}},\"required\":[\"data\",\"operation\"],\"title\":\"process_data_with_progressArguments\",\"type\":\"object\"},\"outputSchema\":{\"properties\":{\"result\":{\"title\":\"Result\",\"type\":\"string\"}},\"required\":[\"result\"],\"title\":\"process_data_with_progressOutput\",\"type\":\"object\"}}]}}"}
{"timestamp": "2025-10-17T17:57:22.368435108+03:00", "transport_type": "http", "http_transport": {"pid": 47837, "comm": "python", "host": "127.0.0.1:12345", "is_request": true}, "type": "request", "id": 7, "method": "tools/call", "params": {"arguments": {"city": "New York", "units": "metric"}, "name": "get_weather"}, "error": {}, "raw": "{\"method\":\"tools/call\",\"params\":{\"name\":\"get_weather\",\"arguments\":{\"city\":\"New York\",\"units\":\"metric\"}},\"jsonrpc\":\"2.0\",\"id\":7}"}
{"timestamp": "2025-10-17T17:57:22.373370762+03:00", "transport_type": "http", "http_transport": {"pid": 47837, "comm": "python", "host": "127.0.0.1:12345"}, "type": "response", "id": 7, "result": {"content": [{"text": "Weather in New York: 20\u00b0C", "type": "text"}], "isError": false, "structuredContent": {"result": "Weather in New York: 20\u00b0C"}}, "error": {}, "request": {"type": "request", "id": 7, "method": "tools/call", "params": {"arguments": {"city": "New York", "units": "metric"}, "name": "get_weather"}, "error": {}}, "raw": "{\"jsonrpc\":\"2.0\",\"id\":7,\"result\":{\"content\":[{\"type\":\"text\",\"text\":\"Weather in New York: 20\u00b0C\"}],\"structuredContent\":{\"result\":\"Weather in New York: 20\u00b0C\"},\"isError\":false}}"}
{"timestamp": "2025-10-17T17:57:22.381330099+03:00", "transport_type": "http", "http_transport": {"pid": 47837, "comm": "python", "host": "127.0.0.1:12345", "is_request": true}, "type": "request", "id": 8, "method": "tools/call", "params": {"arguments": {"data": ["item1", "item2", "item3"], "operation": "uppercase"}, "name": "process_data_with_progress"}, "error": {}, "raw": "{\"method\":\"tools/call\",\"params\":{\"name\":\"process_data_with_progress\",\"arguments\":{\"data\":[\"item1\",\"item2\",\"item3\"],\"operation\":\"uppercase\"}},\"jsonrpc\":\"2.0\",\"id\":8}"}
{"timestamp": "2025-10-17T17:57:22.383689501+03:00", "transport_type": "http", "http_transport": {"pid": 47837, "comm": "python", "host": "127.0.0.1:12345"}, "type": "notification", "method": "notifications/message", "params": {"data": "Starting uppercase operation on 3 items", "level": "info"}, "error": {}, "raw": "{\"method\":\"notifications/message\",\"params\":{\"level\":\"info\",\"data\":\"Starting uppercase operation on 3 items\"},\"jsonrpc\":\"2.0\"}"}
{"timestamp": "2025-10-17T17:57:22.693781077+03:00", "transport_type": "http", "http_transport": {"pid": 47837, "comm": "python", "host": "127.0.0.1:12345"}, "type": "notification", "method": "notifications/message", "params": {"data": "Completed uppercase operation", "level": "info"}, "error": {}, "raw": "{\"method\":\"notifications/message\",\"params\":{\"level\":\"info\",\"data\":\"Completed uppercase operation\"},\"jsonrpc\":\"2.0\"}"}
{"timestamp": "2025-10-17T17:57:22.694618564+03:00", "transport_type": "http", "http_transport": {"pid": 47837, "comm": "python", "host": "127.0.0.1:12345"}, "type": "response", "id": 8, "result": {"content": [{"text": "Processed 3 items: [\n  \"ITEM1\",\n  \"ITEM2\",\n  \"ITEM3\"\n]", "type": "text"}], "isError": false, "structuredContent": {"result": "Processed 3 items: [\n  \"ITEM1\",\n  \"ITEM2\",\n  \"ITEM3\"\n]"}}, "error": {}, "request": {"type": "request", "id": 8, "method": "tools/call", "params": {"arguments": {"data": ["item1", "item2", "item3"], "operation": "uppercase"}, "name": "process_data_with_progress"}, "error": {}}, "raw": "{\"jsonrpc\":\"2.0\",\"id\":8,\"result\":{\"content\":[{\"type\":\"text\",\"text\":\"Processed 3 items: [\\n  \\\"ITEM1\\\",\\n  \\\"ITEM2\\\",\\n  \\\"ITEM3\\\"\\n]\"}],\"structuredContent\":{\"result\":\"Processed 3 items: [\\n  \\\"ITEM1\\\",\\n  \\\"ITEM2\\\",\\n  \\\"ITEM3\\\"\\n]\"},\"isError\":false}}"}
{"timestamp": "2025-10-17T17:57:22.706902998+03:00", "transport_type": "http", "http_transport": {"pid": 47837, "comm": "python", "host": "127.0.0.1:12345", "is_request": true}, "type": "request", "id": 9, "method": "ping", "error": {}, "raw": "{\"method\":\"ping\",\"jsonrpc\":\"2.0\",\"id\":9}"}
{"timestamp": "2025-10-17T17:57:22.708655404+03:00", "transport_type": "http", "http_transport": {"pid": 47837, "comm": "python", "host": "127.0.0.1:12345"}, "type": "response", "id": 9, "result": {}, "error": {}, "request": {"type": "request", "id": 9, "method": "ping", "error": {}}, "raw": "{\"jsonrpc\":\"2.0\",\"id\":9,\"result\":{}}"}
